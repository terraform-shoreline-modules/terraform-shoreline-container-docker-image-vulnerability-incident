resource "shoreline_notebook" "docker_image_vulnerability_incident" {
  name       = "docker_image_vulnerability_incident"
  data       = file("${path.module}/data/docker_image_vulnerability_incident.json")
  depends_on = [shoreline_action.invoke_docker_cleanup]
}

resource "shoreline_file" "docker_cleanup" {
  name             = "docker_cleanup"
  input_file       = "${path.module}/data/docker_cleanup.sh"
  md5              = filemd5("${path.module}/data/docker_cleanup.sh")
  description      = "Identify the affected Docker images and stop their usage across all systems."
  destination_path = "/tmp/docker_cleanup.sh"
  resource_query   = "host"
  enabled          = true
}

resource "shoreline_action" "invoke_docker_cleanup" {
  name        = "invoke_docker_cleanup"
  description = "Identify the affected Docker images and stop their usage across all systems."
  command     = "`chmod +x /tmp/docker_cleanup.sh && /tmp/docker_cleanup.sh`"
  params      = ["NAME_OF_AFFECTED_DOCKER_IMAGE","IMAGE_NAME"]
  file_deps   = ["docker_cleanup"]
  enabled     = true
  depends_on  = [shoreline_file.docker_cleanup]
}

